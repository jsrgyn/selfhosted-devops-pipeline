# =============================================================================
# .env.example — Template de Variáveis de Ambiente
# =============================================================================
# Copie este arquivo para .env e configure conforme seu ambiente
# NUNCA comite o arquivo .env no controle de versão!
# -----------------------------------------------------------------------------
# Para gerar segredos fortes: openssl rand -hex 32
# =============================================================================

# =============================================================================
# CONFIGURAÇÕES GERAIS
# =============================================================================
# UID e GID do usuário que executará os serviços
USER_UID=1000
USER_GID=1000

# Nome do projeto para o Docker Compose
COMPOSE_PROJECT_NAME=devops-stack

# Fuso horário (consulte /usr/share/zoneinfo)
TZ=America/Sao_Paulo

# =============================================================================
# CONFIGURAÇÕES DO POSTGRESQL
# =============================================================================
# Credenciais do superusuário do PostgreSQL
POSTGRES_USER=postgres_admin
POSTGRES_PASSWORD=StrongPassword123!
POSTGRES_DB=postgres
POSTGRES_PORT=5432

# =============================================================================
# CONFIGURAÇÕES DO GITEA
# =============================================================================
# Domínio e URL
GITEA_DOMAIN=gitea.local
GITEA_ROOT_URL=http://gitea.local/
GITEA_HTTP_PORT=3000
GITEA_SSH_PORT=222

# Configurações do banco de dados
GITEA_DATABASE=gitea_db
GITEA_DATABASE_USER=gitea_user
GITEA_DB_PASSWORD=StrongGiteaPassword123!

# Segredos (gerar novos para produção!)
GITEA_SECRET_KEY=your_gitea_secret_key_here
GITEA_INTERNAL_TOKEN=your_gitea_internal_token_here
GITEA_OAUTH2_JWT_SECRET=your_gitea_oauth2_jwt_secret_here

# =============================================================================
# CONFIGURAÇÕES DO DRONE CI
# =============================================================================
# URL e protocolo
DRONE_SERVER_HOST=drone.local
DRONE_SERVER_PROTO=http
DRONE_HTTP_ADDR=:80

# Configurações do banco de dados
DRONE_DATABASE=drone_db
DRONE_DATABASE_USER=drone_user
DRONE_DB_PASSWORD=StrongDronePassword123!

# Comunicação interna
DRONE_RPC_HOST=drone_server
DRONE_RPC_SECRET=your_drone_rpc_secret_here

# Integração com Gitea
DRONE_GITEA_SERVER=http://gitea.local
DRONE_GITEA_CLIENT_ID=your_gitea_client_id_here
DRONE_GITEA_CLIENT_SECRET=your_gitea_client_secret_here
DRONE_GITEA_URL=http://gitea.local

# Usuário administrador
DRONE_ADMIN_USER=admin

# Runner
DRONE_RUNNER_NAME=environment:ssh-build,arch:arm64

# Webhooks
DRONE_WEBHOOK_ENDPOINT=http://gitea.local/api/v1/repos/{owner}/{name}/statuses/{sha}
DRONE_WEBHOOK_SECRET=your_drone_webhook_secret_here

# =============================================================================
# CONFIGURAÇÕES DO SONARQUBE
# =============================================================================
SONARQUBE_DB_NAME=sonarqube_db
SONARQUBE_DB_USER=sonarqube_user
SONARQUBE_DB_PASSWORD=StrongSonarPassword123!
SONARQUBE_PORT=9000

# =============================================================================
# CONFIGURAÇÕES DO NGINX
# =============================================================================
NGINX_PORT=80
NGINX_SSL_PORT=443

# =============================================================================
# CONFIGURAÇÕES DO BUILD SERVER
# =============================================================================
# Versão do Node.js para o build server
NODE_VERSION=18

# URL base para testes Cypress
CYPRESS_BASE_URL=http://homolog-app.local:8000

# =============================================================================
# CONFIGURAÇÕES DO GRAFANA
# =============================================================================
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=StrongGrafanaPassword123!

# =============================================================================
# CONFIGURAÇÕES DE MONITORAMENTO (OPCIONAIS)
# =============================================================================
# Loki
LOKI_RETENTION_PERIOD=72h

# Prometheus
PROMETHEUS_RETENTION_TIME=720h

# =============================================================================
# NOTAS IMPORTANTES:
# =============================================================================
# 1. NUNCA commite este arquivo .env no Git!
# 2. Use senhas fortes (mínimo 16 caracteres, misturando maiúsculas, minúsculas, números e símbolos)
# 3. Gere secrets únicos para cada serviço: 
#     openssl rand -hex 32
# 4. Configure DNS local ou /etc/hosts para os domínios:
#    127.0.0.1 gitea.local drone.local sonar.local grafana.local
# 5. Para produção:
#    - Use um gerenciador de secrets (HashiCorp Vault, AWS Secrets Manager, etc.)
#    - Habilite HTTPS com certificados válidos
#    - Configure autenticação forte em todos os serviços
# 6. Teste em ambiente de desenvolvimento antes de implantar em produção
# 7. Mantenha backup seguro das variáveis de ambiente
# 8. Revise periodicamente as permissões e credenciais
# 9. Use o comando 'make generate-secrets' para gerar novos segredos
# 10. Para ambientes específicos, crie arquivos:
#     .env.development, .env.staging, .env.production
#
# =============================================================================
# GERADOR DE SECRETS (execute no terminal)
# =============================================================================
# Gitea Secret Key:           openssl rand -hex 64
# Gitea Internal Token:       openssl rand -hex 64
# Gitea OAuth2 JWT Secret:    openssl rand -hex 32
# Drone RPC Secret:           openssl rand -hex 32
# Drone Webhook Secret:       openssl rand -hex 32
# =============================================================================